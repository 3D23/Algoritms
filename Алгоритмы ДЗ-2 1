class Solution:
    def countSquares(self, matrix: List[List[int]]) -> int:
        count = 0
        for i in range(len(matrix)):              #Проходимя циклом по всем элементам матрицы
            for j in range(len(matrix[0])):
                if matrix[i][j] == 1:
                    if i == 0 or j == 0: 
                        count += 1     #Если встретилось значение - 1 сверху или снизу, то добавляем к количеству квадратных матриц единицу.
                    else:
                        count += min(matrix[i - 1][j], matrix[i][j - 1], matrix[i - 1][j - 1]) + matrix[i][j] # К количеству квадратных матриц добавляется это значение - Оно, как бы показывает какой ранг будет иметь матрица, в которой нижний правый элемент будет этот элемент 
                        matrix[i][j] += min(matrix[i - 1][j], matrix[i][j - 1], matrix[i - 1][j - 1]) # Значение элемента матрицы равно этому значению, и оно показывает какой ранг у нашей матрицы в которой нижний правый элемент будет этот элемент. 
        return count 
# Алгоритм ищет сколько в исходной матрице, квадратных матриц, состоящих только из единиц.
#Сложность алгоритма - O(m*n)
